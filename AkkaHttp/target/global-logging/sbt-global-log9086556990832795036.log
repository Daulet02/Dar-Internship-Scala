[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\user\AppData\Local\Temp\idea5.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\user\AppData\Local\Temp\idea5.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.6 (Oracle Corporation Java 14.0.2)
[debug]       Load.loadUnit: plugins took 142.8088ms
[debug]       Load.loadUnit: defsScala took 0.3522ms
[debug] [Loading] Scanning directory C:\Users\user\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\user\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 29.1716 ms
[debug]           Load.resolveProject(global-plugins) took 57.0071ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\user\.sbt\1.0\plugins, plugins: List(<none>))) took 110.5953ms
[debug] [Loading] Done in C:\Users\user\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 141.7621ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2014ms
[debug]     Load.loadUnit(file:/C:/Users/user/.sbt/1.0/plugins/, ...) took 295.9123ms
[debug]   Load.apply: load took 503.6685ms
[debug]   Load.apply: resolveProjects took 5.7447ms
[debug]   Load.apply: finalTransforms took 86.2289ms
[debug]   Load.apply: config.delegates took 10.9858ms
[debug]   Load.apply: Def.make(settings)... took 1050.9132ms
[debug]   Load.apply: structureIndex took 234.1523ms
[debug]   Load.apply: mkStreams took 2.5721ms
[info] loading global plugins from C:\Users\user\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4166.4594ms
[debug]           Load.loadUnit: plugins took 57.3843ms
[debug]           Load.loadUnit: defsScala took 0.005ms
[debug] [Loading] Scanning directory C:\Users\user\Desktop\AkkaHttp\project
[debug]             Load.loadUnit: mkEval took 7.3437ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\user\Desktop\AkkaHttp\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.9259 ms
[info] loading settings for project akkahttp-build from idea5.sbt ...
[debug]               Load.resolveProject(akkahttp-build) took 4.1544ms
[debug]             Load.loadTransitive: finalizeProject(Project(id akkahttp-build, base: C:\Users\user\Desktop\AkkaHttp\project, plugins: List(<none>))) took 7.9372ms
[debug] [Loading] Done in C:\Users\user\Desktop\AkkaHttp\project, returning: (akkahttp-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 238.9239ms
[debug]           Load.loadUnit: cleanEvalClasses took 13.1587ms
[debug]         Load.loadUnit(file:/C:/Users/user/Desktop/AkkaHttp/project/, ...) took 310.9807ms
[debug]       Load.apply: load took 314.0359ms
[debug]       Load.apply: resolveProjects took 0.1619ms
[debug]       Load.apply: finalTransforms took 28.6738ms
[debug]       Load.apply: config.delegates took 0.9137ms
[debug]       Load.apply: Def.make(settings)... took 195.6322ms
[debug]       Load.apply: structureIndex took 44.3193ms
[debug]       Load.apply: mkStreams took 0.0029ms
[info] loading project definition from C:\Users\user\Desktop\AkkaHttp\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1090.6371ms
[debug]     Load.loadUnit: defsScala took 0.0092ms
[debug] [Loading] Scanning directory C:\Users\user\Desktop\AkkaHttp
[debug]       Load.loadUnit: mkEval took 0.5775ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\user\Desktop\AkkaHttp, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.9546 ms
[info] loading settings for project akkahttp from build.sbt ...
[debug]         Load.resolveProject(akkahttp) took 67.1553ms
[debug]       Load.loadTransitive: finalizeProject(Project(id akkahttp, base: C:\Users\user\Desktop\AkkaHttp, plugins: List(<none>))) took 72.9474ms
[debug] [Loading] Done in C:\Users\user\Desktop\AkkaHttp, returning: (akkahttp)
[debug]     Load.loadUnit: loadedProjectsRaw took 323.973ms
[debug]     Load.loadUnit: cleanEvalClasses took 70.0133ms
[debug]   Load.loadUnit(file:/C:/Users/user/Desktop/AkkaHttp/, ...) took 1487.8662ms
[debug] Load.apply: load took 1493.5805ms
[debug] Load.apply: resolveProjects took 0.2305ms
[debug] Load.apply: finalTransforms took 68.5327ms
[debug] Load.apply: config.delegates took 0.5138ms
[debug] Load.apply: Def.make(settings)... took 189.2018ms
[debug] Load.apply: structureIndex took 70.6168ms
[debug] Load.apply: mkStreams took 0.0038ms
[info] set current project to AkkaHttp (in build file:/C:/Users/user/Desktop/AkkaHttp/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 60269 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 60269, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to AkkaHttp (in build file:/C:/Users/user/Desktop/AkkaHttp/)
[debug] > Exec(idea-shell, None, None)
