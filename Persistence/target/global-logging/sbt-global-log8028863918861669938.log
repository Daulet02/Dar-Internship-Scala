[debug] > Exec(;reload; set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download resolveClassifiers resolveSbtClassifiers" ;*/*:dumpStructureTo C:/Users/user/AppData/Local/Temp/sbt-structure.xml; session clear-all ; set ideaPort in Global := 59000, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 14.0.2)
[debug]       Load.loadUnit: plugins took 49.794ms
[debug]       Load.loadUnit: defsScala took 0.0083ms
[debug] [Loading] Scanning directory C:\Users\user\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\user\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.2399 ms
[debug]           Load.resolveProject(global-plugins) took 0.9048ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\user\.sbt\1.0\plugins, plugins: List(<none>))) took 2.4258ms
[debug] [Loading] Done in C:\Users\user\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 3.3341ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0059ms
[debug]     Load.loadUnit(file:/C:/Users/user/.sbt/1.0/plugins/, ...) took 53.8169ms
[debug]   Load.apply: load took 55.2837ms
[debug]   Load.apply: resolveProjects took 0.0746ms
[debug]   Load.apply: finalTransforms took 7.3932ms
[debug]   Load.apply: config.delegates took 0.2064ms
[debug]   Load.apply: Def.make(settings)... took 42.7294ms
[debug]   Load.apply: structureIndex took 13.3561ms
[debug]   Load.apply: mkStreams took 0.0038ms
[info] loading global plugins from C:\Users\user\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Forcing garbage collection...
[debug] Load.defaultLoad until apply took 558.146ms
[debug]           Load.loadUnit: plugins took 42.6135ms
[debug]           Load.loadUnit: defsScala took 0.0041ms
[debug] [Loading] Scanning directory C:\Users\user\Desktop\Dar-Internship\Persistence\project
[debug]             Load.loadUnit: mkEval took 0.5497ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\user\Desktop\Dar-Internship\Persistence\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.3852 ms
[info] loading settings for project persistence-build from idea.sbt ...
[debug]               Load.resolveProject(persistence-build) took 4.4694ms
[debug]             Load.loadTransitive: finalizeProject(Project(id persistence-build, base: C:\Users\user\Desktop\Dar-Internship\Persistence\project, plugins: List(<none>))) took 6.22ms
[debug] [Loading] Done in C:\Users\user\Desktop\Dar-Internship\Persistence\project, returning: (persistence-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 33.0293ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.0655ms
[debug]         Load.loadUnit(file:/C:/Users/user/Desktop/Dar-Internship/Persistence/project/, ...) took 81.4256ms
[debug]       Load.apply: load took 82.9629ms
[debug]       Load.apply: resolveProjects took 0.1133ms
[debug]       Load.apply: finalTransforms took 6.33ms
[debug]       Load.apply: config.delegates took 0.2745ms
[debug]       Load.apply: Def.make(settings)... took 36.3969ms
[debug]       Load.apply: structureIndex took 10.283ms
[debug]       Load.apply: mkStreams took 0.0023ms
[info] loading project definition from C:\Users\user\Desktop\Dar-Internship\Persistence\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 291.6822ms
[debug]     Load.loadUnit: defsScala took 0.0042ms
[debug] [Loading] Scanning directory C:\Users\user\Desktop\Dar-Internship\Persistence
[debug]       Load.loadUnit: mkEval took 0.5943ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\user\Desktop\Dar-Internship\Persistence, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.8522 ms
[info] loading settings for project persistence from build.sbt ...
[debug]         Load.resolveProject(persistence) took 33.3849ms
[debug]       Load.loadTransitive: finalizeProject(Project(id persistence, base: C:\Users\user\Desktop\Dar-Internship\Persistence, plugins: List(<none>))) took 35.7131ms
[debug] [Loading] Done in C:\Users\user\Desktop\Dar-Internship\Persistence, returning: (persistence)
[debug]     Load.loadUnit: loadedProjectsRaw took 746.4653ms
[debug]     Load.loadUnit: cleanEvalClasses took 39.9628ms
[debug]   Load.loadUnit(file:/C:/Users/user/Desktop/Dar-Internship/Persistence/, ...) took 1078.8528ms
[debug] Load.apply: load took 1080.5262ms
[debug] Load.apply: resolveProjects took 0.0544ms
[debug] Load.apply: finalTransforms took 11.9985ms
[debug] Load.apply: config.delegates took 0.1441ms
[debug] Load.apply: Def.make(settings)... took 37.9741ms
[debug] Load.apply: structureIndex took 11.6775ms
[debug] Load.apply: mkStreams took 0.0023ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to Persistence (in build file:/C:/Users/user/Desktop/Dar-Internship/Persistence/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download resolveClassifiers resolveSbtClassifiers", None, None)
[info] Defining Global / sbtStructureOptions
[info] The new value will be used by Global / ssOptions
[debug] Defining 
[debug] 	Global / sbtStructureOptions
[debug] 
[debug] The new value will be used by 
[debug] 	Global / ssOptions
[info] Reapplying settings...
[info] set current project to Persistence (in build file:/C:/Users/user/Desktop/Dar-Internship/Persistence/)
[debug] > Exec(*/*:dumpStructureTo C:/Users/user/AppData/Local/Temp/sbt-structure.xml, None, None)
[debug] Evaluating tasks: Global / dumpStructureTo
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] Writing structure to C:\Users\user\AppData\Local\Temp\sbt-structure.xml...
[info] Done.
[success] Total time: 7 s, completed 15 февр. 2021 г., 12:25:50
[debug] > Exec(session clear-all, None, None)
[info] Reapplying settings...
[info] set current project to Persistence (in build file:/C:/Users/user/Desktop/Dar-Internship/Persistence/)
[debug] > Exec(set ideaPort in Global := 59000, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Persistence (in build file:/C:/Users/user/Desktop/Dar-Internship/Persistence/)
[debug] > Exec(idea-shell, None, None)
[debug] > Exec(, None, None)
[debug] > Exec(idea-shell, None, None)
